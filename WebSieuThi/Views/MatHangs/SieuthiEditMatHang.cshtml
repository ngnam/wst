@model WebSieuThi.Models.MatHangModel
@{
    ViewBag.Title = "Sửa mặt hàng";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<script src="~/Scripts/ckeditor/ckeditor.js"></script>
<div class="row">
    <div class="col-lg-12">
        <div class="page-header">
            <h3><i class="fa fa-user fa-2x fa-color-red"></i> @ViewBag.Title</h3>
        </div>

        @if (TempData["Updated"] != null)
        {
            <div class="alert alert-success alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                @Html.Raw(TempData["Updated"])
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                @Html.Raw(TempData["Error"])
            </div>
        }
    </div>

    <!-- /.col-lg-12 -->
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default box box-primary">
            <div class="panel-body">
                @if (Model != null)
                {
                    using (Html.BeginForm("SieuthiEditMatHang", "MatHangs", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "SieuthiEditMatHang", onsubmit = "return validate()" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(m => m.MatHangId)
                        @Html.HiddenFor(m => m.HeThongId)

                        <div class="form-group">
                            <label class="control-label col-md-2">Chọn gian hàng</label>
                            <div class="col-md-10">
                                @if (ViewBag.gianhang != null)
                                {
                                    @Html.DropDownListFor(m => m.strGianHang, new SelectList(ViewBag.gianhang, "Value", "Text"), "-Chọn loại hình kinh doanh siêu thị-", new { @class = "form-control width-200" })
                                }
                                @Html.ValidationMessageFor(m => m.strGianHang, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.MaMatHang, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.MaMatHang, new { @class = "form-control", placeholder = "Nhập mã mặt hàng" })
                                @Html.ValidationMessageFor(m => m.MaMatHang, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.TenMatHang, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.TenMatHang, new { @class = "form-control", placeholder = "Nhập tên mặt hàng" })
                                @Html.ValidationMessageFor(m => m.TenMatHang, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.AnhDaiDien, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">

                                @Html.ValidationMessageFor(m => m.AnhDaiDien, "", new { @class = "text-danger" })
                                <div id="divanhdaidien" class="upanh">
                                    @Html.HiddenFor(m => m.AnhDaiDien)
                                    <a class="closed"><i class="fa fa-close fa-2x"></i></a>
                                    <i class="fa fa-edit fa-3x"></i>
                                </div>
                                <div id="dzAnhDaidien" class="dropzone" style="display: none;">
                                    <div class="dz-default dz-message" data-dz-message>
                                        <span>Chọn ảnh mặt hàng hàng chung hệ thống siêu thị</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.DsHinhAnh, new { @class = "col-md-2 control-label" })

                            <div class="col-md-2">
                                <div id="divanh1" class="upanh">
                                    @Html.HiddenFor(m => m.indivanh1)
                                    <a class="closed"><i class="fa fa-close fa-2x"></i></a>
                                    <i class="fa fa-edit fa-3x"></i>
                                </div>
                                @Html.ValidationMessageFor(m => m.indivanh1, "", new { @class = "text-danger" })
                                <div id="dzdivanh1" class="dropzone" style="display: none;">
                                    <div class="dz-default dz-message" data-dz-message>
                                        <span>Chọn ảnh 1</span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-2">
                                <div id="divanh2" class="upanh">
                                    @Html.HiddenFor(m => m.indivanh2)
                                    <a class="closed"><i class="fa fa-close fa-2x"></i></a>
                                    <i class="fa fa-edit fa-3x"></i>
                                </div>
                                <div id="dzdivanh2" class="dropzone" style="display: none;">
                                    <div class="dz-default dz-message" data-dz-message>
                                        <span>Chọn ảnh 2</span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-2">
                                <div id="divanh3" class="upanh">
                                    @Html.HiddenFor(m => m.indivanh3)
                                    <a class="closed"><i class="fa fa-close fa-2x"></i></a>
                                    <i class="fa fa-edit fa-3x"></i>
                                </div>
                                <div id="dzdivanh3" class="dropzone" style="display: none;">
                                    <div class="dz-default dz-message" data-dz-message>
                                        <span>Chọn ảnh 3</span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-2">
                                <div id="divanh4" class="upanh">
                                    @Html.HiddenFor(m => m.indivanh4)
                                    <a class="closed"><i class="fa fa-close fa-2x"></i></a>
                                    <i class="fa fa-edit fa-3x"></i>
                                </div>
                                <div id="dzdivanh4" class="dropzone" style="display: none;">
                                    <div class="dz-default dz-message" data-dz-message>
                                        <span>Chọn ảnh 4</span>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.MoTa, htmlAttributes: new { @class = "form-control", type = "number", row = 10 })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.GiaCa, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.GiaCa, htmlAttributes: new { @class = "form-control", type = "number", row = 10 })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TrangThai, htmlAttributes: new { @class = "control-label col-md-2" })

                            <div class="col-md-10">
                                @if (ViewBag.trangthaihang != null)
                                {
                                    @Html.DropDownListFor(m => m.TrangThai, new SelectList(ViewBag.trangthaihang, "Value", "Text"), "-Chọn trạng thái hàng hóa-", new { @class = "form-control width-200" })
                                }
                                @Html.ValidationMessageFor(m => m.TrangThai, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LoaiHang, htmlAttributes: new { @class = "control-label col-md-2" })

                            <div class="col-md-10">
                                @if (ViewBag.loaihang != null)
                                {
                                    @Html.DropDownListFor(m => m.LoaiHang, new SelectList(ViewBag.loaihang, "Value", "Text"), "-Chọn loại hàng-", new { @class = "form-control width-200" })
                                }
                                @Html.ValidationMessageFor(m => m.LoaiHang, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        if (@Model.LoaiHang != null && @Model.LoaiHang != "")
                        {
                            <script>
                                $(window).load(function () {
                                    $('#LoaiHang').val('@Model.LoaiHang');
                                })
                            </script>
                        }

                        <div class="form-group" id="ngaythangkhuyenmai" style="display: none;">
                            <label class="col-md-2 control-label">Khuyến mại: </label>
                            <div class="col-md-5">
                                @Html.LabelFor(model => model.NgayBDKM, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(m => m.NgayBDKM)
                                @Html.ValidationMessageFor(m => m.NgayBDKM, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-5">
                                @Html.LabelFor(model => model.NgayKTKM, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(m => m.NgayKTKM)
                                @Html.ValidationMessageFor(m => m.NgayKTKM, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div class="form-group" id="phantramkhuyenmai" style="display: none;">
                            @Html.LabelFor(m => m.PhanTramKM, new { @class = "col-md-2 control-label" })
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.PhanTramKM, new { @class = "form-control", type = "number" })
                                @Html.ValidationMessageFor(m => m.PhanTramKM, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3">
                                <span>%</span>
                            </div>
                        </div>



                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" class="btn btn-primary" value="Thêm mặt hàng" />
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>Không tìm thấy mặt hàng thỏa mãn.</p>
                }
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dropzonescripts")

    <script>
        $(function () {
            CKEDITOR.replace('MoTa',
            {
                uiColor: '#337ab7',
                height: '200px',
            });
        });
        $('.closed').click(function (e) {
            e.preventDefault();
            if ($(this).siblings('input').val() !== "") {
                if (confirm("Bạn chắc chắn muốn xóa ảnh?")) {
                    $(this).parent('.upanh').css('background-image', 'url("/Content/img/no-image.png")');
                    $(this).siblings('input').val('');
                }
            }
        })
        $(function () {
            $.validator.addMethod('date',
            function (value, element) {
                if (this.optional(element)) {
                    return true;
                }
                var ok = true;
                try {
                    $.datepicker.parseDate('yy-mm-dd', value);
                }
                catch (err) {
                    ok = false;
                }
                return ok;
            });
            $(".datefield").datepicker({ dateFormat: 'yy-mm-dd', changeYear: true });
        });

        $(window).load(function () {
            if ($('#LoaiHang').val() === '1') {
                $('#ngaythangkhuyenmai').fadeIn();
                $('#phantramkhuyenmai').fadeIn();
                $('#NgayBDKM').attr({ 'required': 'Vui lòng nhập ngày bắt đầu', 'data-val-required': 'Vui lòng nhập ngày bắt đầu' });
                $('#NgayKTKM').attr({ 'required': 'Vui lòng nhập ngày kết thúc', 'data-val-required': 'Vui lòng nhập ngày kết thúc' });
                $('#PhanTramKM').attr({ 'required': 'Vui lòng nhập phần trăm khuyến mại', 'data-val-required': 'Vui lòng nhập phần trăm khuyến mại' });
            }
        })

        function validate() {
            var _fd = $('#NgayBDKM').val();
            var _td = $('#NgayKTKM').val();
            if (_fd !== "" && _td !== "") {
                var valid = compareDate(_fd, _td);
                if (!valid) {
                    alert('Ngày bắt đầu phải nhỏ hơn ngày kết thúc.');
                    $('#NgayKTKM').focus();
                    return false;
                }
            } else {
                return true;
            }
        }

        $(document).ready(function () {
            //$('#SieuthiEditMatHang').submit(function () {
            //    var _fd = $('#NgayBDKM').val();
            //    var _td = $('#NgayKTKM').val();
            //    if (_fd !== "" && _td !== "") {
            //        compareDate(_fd, _td);
            //    }
            //})

            $('#LoaiHang').on('change', function () {
                if ($(this).val() !== "" && $(this).val() === '1') {
                    $('#ngaythangkhuyenmai').fadeIn();
                    $('#phantramkhuyenmai').fadeIn();
                    $('#NgayBDKM').attr({ 'required': 'Vui lòng nhập ngày bắt đầu', 'data-val-required': 'Vui lòng nhập ngày bắt đầu' });
                    $('#NgayKTKM').attr({ 'required': 'Vui lòng nhập ngày kết thúc', 'data-val-required': 'Vui lòng nhập ngày kết thúc' });
                    $('#PhanTramKM').attr({ 'required': 'Vui lòng nhập phần trăm khuyến mại', 'data-val-required': 'Vui lòng nhập phần trăm khuyến mại' });
                } else {
                    $('#ngaythangkhuyenmai').fadeOut();
                    $('#phantramkhuyenmai').fadeOut();
                    $('#NgayBDKM').val('').removeAttr('required').removeAttr('data-val-required');
                    $('#NgayKTKM').val('').removeAttr('required').removeAttr('data-val-required');
                    $('#PhanTramKM').val('').removeAttr('required').removeAttr('data-val-required');
                }
            });

            $('#AnhDaiDien').val() !== "" ? $('#divanhdaidien').css('background-image', 'url("' + $('#AnhDaiDien').val() + '")') : false;
            $('#indivanh1').val() !== "" ? $('#divanh1').css('background-image', 'url("' + $('#indivanh1').val() + '")') : false;
            $('#indivanh2').val() !== "" ? $('#divanh2').css('background-image', 'url("' + $('#indivanh2').val() + '")') : false;
            $('#indivanh3').val() !== "" ? $('#divanh3').css('background-image', 'url("' + $('#indivanh3').val() + '")') : false;
            $('#indivanh4').val() !== "" ? $('#divanh4').css('background-image', 'url("' + $('#indivanh4').val() + '")') : false;

            Dropzone.autoDiscover = false;
            var myUpAnh = new Dropzone("div#dzAnhDaidien", {
                url: "/Account/SaveAnhImgur",
                addRemoveLinks: true,
                maxFiles: 1,
                maxFilesize: 1,
                uploadMultiple: true,
                acceptedFiles: "image/*",
                clickable: '#divanhdaidien>i',
                dictFallbackMessage: "Trình duyệt của bạn không hỗ trợ kéo thả tệp để tải lên.",
                dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
                dictFileTooBig: "Tệp có dung lượng quá lớn ({{filesize}}MiB). Dung lượng cho phép: {{maxFilesize}}MiB.",
                dictInvalidFileType: "Tệp bạn chọn không được phép tải lên.",
                dictResponseError: "Server responded with {{statusCode}} code.",
                dictCancelUpload: "Hủy tải lên",
                dictCancelUploadConfirmation: "Bạn chắc chắn muốn hủy tải lên?",
                dictRemoveFile: "Loại bỏ tệp tin",
                dictMaxFilesExceeded: "Bạn không thể tải lên nhiều tệp.",
                success: function (file, response) {
                    var imgPath = response.Message;
                    if (imgPath !== "") {
                        $('#AnhDaiDien').val(imgPath);
                        $('#divanhdaidien').css('background-image', 'url("' + imgPath + '")');

                    }
                    this.removeFile(file);
                },
                init: function () {
                    this.on("thumbnail", function (file) {
                        if (file.width - file.height < 10 || file.width - file.height > -10) {
                            file.acceptDimensions();
                            $('#divanhdaidien').append('<div class="loaded">' +
                                    '<i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>' +
                                '</div>');
                        }
                        else {
                            file.rejectDimensions();
                        }
                    })
                },
                complete: function () {
                    $('#divanhdaidien').children('.loaded').remove();
                },
                accept: function (file, done) {
                    file.rejectDimensions = function () {
                        done("Vui lòng chọn ảnh có chiều rộng và chiều cao bằng nhau.");
                    };
                    file.acceptDimensions = done;
                },
                error: function (file, response) {
                    alert(response);
                    this.removeFile(file);
                },
                HiddenFilesPath: 'body'

            });


            //anh1
            var myUpAnh1 = new Dropzone("div#dzdivanh1", {
                url: "/Account/SaveAnhImgur",
                addRemoveLinks: true,
                maxFiles: 1,
                maxFilesize: 1,
                uploadMultiple: true,
                acceptedFiles: "image/*",
                clickable: '#divanh1>i',
                dictFallbackMessage: "Trình duyệt của bạn không hỗ trợ kéo thả tệp để tải lên.",
                dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
                dictFileTooBig: "Tệp có dung lượng quá lớn ({{filesize}}MiB). Dung lượng cho phép: {{maxFilesize}}MiB.",
                dictInvalidFileType: "Tệp bạn chọn không được phép tải lên.",
                dictResponseError: "Server responded with {{statusCode}} code.",
                dictCancelUpload: "Hủy tải lên",
                dictCancelUploadConfirmation: "Bạn chắc chắn muốn hủy tải lên?",
                dictRemoveFile: "Loại bỏ tệp tin",
                dictMaxFilesExceeded: "Bạn không thể tải lên nhiều tệp.",
                success: function (file, response) {
                    var imgPath = response.Message;
                    if (imgPath !== "") {
                        $('#indivanh1').val(imgPath);
                        $('#divanh1').css('background-image', 'url("' + imgPath + '")');

                    }
                    this.removeFile(file);
                },
                init: function () {
                    this.on("thumbnail", function (file) {
                        var w = file.width;
                        var h = file.height;
                        if (Math.round((w / 17) * 9) < h && h < Math.round((w / 15) * 9)) {
                            file.acceptDimensions();
                            $('#divanh1').append('<div class="loaded">' +
                                   '<i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>' +
                               '</div>');
                        }
                        else {
                            file.rejectDimensions();
                        }
                    })
                },
                complete: function () {
                    $('#divanh1').children('.loaded').remove();
                },
                accept: function (file, done) {
                    file.rejectDimensions = function () {
                        done("Vui lòng chọn ảnh có tỷ lệ 16/9.");
                    };
                    file.acceptDimensions = done;
                },
                error: function (file, response) {
                    alert(response);
                    this.removeFile(file);
                },
                HiddenFilesPath: 'body'

            });

            //anh2
            var myUpAnh2 = new Dropzone("div#dzdivanh2", {
                url: "/Account/SaveAnhImgur",
                addRemoveLinks: true,
                maxFiles: 1,
                maxFilesize: 1,
                uploadMultiple: true,
                acceptedFiles: "image/*",
                clickable: '#divanh2>i',
                dictFallbackMessage: "Trình duyệt của bạn không hỗ trợ kéo thả tệp để tải lên.",
                dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
                dictFileTooBig: "Tệp có dung lượng quá lớn ({{filesize}}MiB). Dung lượng cho phép: {{maxFilesize}}MiB.",
                dictInvalidFileType: "Tệp bạn chọn không được phép tải lên.",
                dictResponseError: "Server responded with {{statusCode}} code.",
                dictCancelUpload: "Hủy tải lên",
                dictCancelUploadConfirmation: "Bạn chắc chắn muốn hủy tải lên?",
                dictRemoveFile: "Loại bỏ tệp tin",
                dictMaxFilesExceeded: "Bạn không thể tải lên nhiều tệp.",
                success: function (file, response) {
                    var imgPath = response.Message;
                    if (imgPath !== "") {
                        $('#indivanh2').val(imgPath);
                        $('#divanh2').css('background-image', 'url("' + imgPath + '")');

                    }
                    this.removeFile(file);
                },
                init: function () {
                    this.on("thumbnail", function (file) {
                        var w = file.width;
                        var h = file.height;
                        if (Math.round((w / 17) * 9) < h && h < Math.round((w / 15) * 9)) {
                            file.acceptDimensions();
                            $('#divanh2').append('<div class="loaded">' +
                                   '<i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>' +
                               '</div>');
                        }
                        else {
                            file.rejectDimensions();
                        }
                    })
                },
                complete: function () {
                    $('#divanh2').children('.loaded').remove();
                },
                accept: function (file, done) {
                    file.rejectDimensions = function () {
                        done("Vui lòng chọn ảnh có tỷ lệ 16/9.");
                    };
                    file.acceptDimensions = done;
                },
                error: function (file, response) {
                    alert(response);
                    this.removeFile(file);
                },
                HiddenFilesPath: 'body'

            });

            //anh3
            var myUpAnh3 = new Dropzone("div#dzdivanh3", {
                url: "/Account/SaveAnhImgur",
                addRemoveLinks: true,
                maxFiles: 1,
                maxFilesize: 1,
                uploadMultiple: true,
                acceptedFiles: "image/*",
                clickable: '#divanh3>i',
                dictFallbackMessage: "Trình duyệt của bạn không hỗ trợ kéo thả tệp để tải lên.",
                dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
                dictFileTooBig: "Tệp có dung lượng quá lớn ({{filesize}}MiB). Dung lượng cho phép: {{maxFilesize}}MiB.",
                dictInvalidFileType: "Tệp bạn chọn không được phép tải lên.",
                dictResponseError: "Server responded with {{statusCode}} code.",
                dictCancelUpload: "Hủy tải lên",
                dictCancelUploadConfirmation: "Bạn chắc chắn muốn hủy tải lên?",
                dictRemoveFile: "Loại bỏ tệp tin",
                dictMaxFilesExceeded: "Bạn không thể tải lên nhiều tệp.",
                success: function (file, response) {
                    var imgPath = response.Message;
                    if (imgPath !== "") {
                        $('#indivanh3').val(imgPath);
                        $('#divanh3').css('background-image', 'url("' + imgPath + '")');

                    }
                    this.removeFile(file);
                },
                complete: function () {
                    $('#divanh3').children('.loaded').remove();
                },
                init: function () {
                    this.on("thumbnail", function (file) {
                        var w = file.width;
                        var h = file.height;
                        if (Math.round((w / 17) * 9) < h && h < Math.round((w / 15) * 9)) {
                            file.acceptDimensions();
                            $('#divanh3').append('<div class="loaded">' +
                                    '<i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>' +
                                '</div>');
                        }
                        else {
                            file.rejectDimensions();
                        }
                    })
                },
                accept: function (file, done) {
                    file.rejectDimensions = function () {
                        done("Vui lòng chọn ảnh có tỷ lệ 16/9.");
                    };
                    file.acceptDimensions = done;
                },
                error: function (file, response) {
                    alert(response);
                    this.removeFile(file);
                },
                HiddenFilesPath: 'body'

            });

            //anh4
            var myUpAnh1 = new Dropzone("div#dzdivanh4", {
                url: "/Account/SaveAnhImgur",
                addRemoveLinks: true,
                maxFiles: 1,
                maxFilesize: 1,
                uploadMultiple: true,
                acceptedFiles: "image/*",
                clickable: '#divanh4>i',
                dictFallbackMessage: "Trình duyệt của bạn không hỗ trợ kéo thả tệp để tải lên.",
                dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
                dictFileTooBig: "Tệp có dung lượng quá lớn ({{filesize}}MiB). Dung lượng cho phép: {{maxFilesize}}MiB.",
                dictInvalidFileType: "Tệp bạn chọn không được phép tải lên.",
                dictResponseError: "Server responded with {{statusCode}} code.",
                dictCancelUpload: "Hủy tải lên",
                dictCancelUploadConfirmation: "Bạn chắc chắn muốn hủy tải lên?",
                dictRemoveFile: "Loại bỏ tệp tin",
                dictMaxFilesExceeded: "Bạn không thể tải lên nhiều tệp.",
                success: function (file, response) {
                    var imgPath = response.Message;
                    if (imgPath !== "") {
                        $('#indivanh4').val(imgPath);
                        $('#divanh4').css('background-image', 'url("' + imgPath + '")');

                    }
                    this.removeFile(file);
                },
                init: function () {
                    this.on("thumbnail", function (file) {
                        var w = file.width;
                        var h = file.height;
                        if (Math.round((w / 17) * 9) < h && h < Math.round((w / 15) * 9)) {
                            file.acceptDimensions();
                            $('#divanh4').append('<div class="loaded">' +
                                    '<i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>' +
                                '</div>');
                        }
                        else {
                            file.rejectDimensions();
                        }
                    })
                },
                complete: function () {
                    $('#divanh4').children('.loaded').remove();
                },
                accept: function (file, done) {
                    file.rejectDimensions = function () {
                        done("Vui lòng chọn ảnh có tỷ lệ 16/9.");
                    };
                    file.acceptDimensions = done;
                },
                error: function (file, response) {
                    alert(response);
                    this.removeFile(file);
                },
                HiddenFilesPath: 'body'

            });

        });

    </script>
}