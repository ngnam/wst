@model WebSieuThi.Models.SieuThiModel
@{
    ViewBag.Title = "Sửa thông tin siêu thị";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<script src="http://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyDlWlLpmPg4MOfcAYoH8NIyKP7m_exujUU&language=vi&region=VN"></script>
<script src="~/Scripts/jquery.geocomplete.min.js"></script>

<div class="row">
    <div class="col-lg-12">
        <div class="page-header">
            <h3><i class="fa fa-user fa-2x fa-color-red"></i> @ViewBag.Title</h3>
        </div>

        @if (TempData["Updated"] != null)
        {
            <div class="alert alert-success alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                @Html.Raw(TempData["Updated"])
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                @Html.Raw(TempData["Error"])
            </div>
        }
    </div>

    <!-- /.col-lg-12 -->
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default box box-primary">
            <div class="panel-body">
                @if (Model != null)
                {
                    using (Html.BeginForm("HeThongEditSieuThi", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "HeThongEditSieuThi" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(m => m.SieuThiId)
                        @Html.HiddenFor(m => m.HeThongId)
                        <div class="form-group">
                            @Html.LabelFor(m => m.TenSieuThi, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.TenSieuThi, new { @class = "form-control", placeholder = "Tên siêu thị" })
                                @Html.ValidationMessageFor(m => m.TenSieuThi, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.DiaChi, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.HiddenFor(m => m.longlat)
                                @Html.TextBoxFor(m => m.DiaChi, new { @class = "form-control", placeholder = "Địa chỉ" })
                                @Html.ValidationMessageFor(m => m.DiaChi, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.DienThoai, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.DienThoai, new { @class = "form-control", placeholder = "Số điện thoại" })
                                @Html.ValidationMessageFor(m => m.DienThoai, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Địa chỉ email" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.CuocPhiVC, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.CuocPhiVC, new { @class = "form-control", placeholder = "Cước phí vận chuyển" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.GioMoCua, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.GioMoCua, new { @class = "form-control", placeholder = "Giờ mở cửa" })
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.ValidationMessageFor(m => m.longlat, "", new { @class = "text-danger" })
                            <div class="col-md-offset-2 col-md-10">
                                <input type="text" name="address_search" id="address_search" class="form-control" placeholder="Nhập địa chỉ tìm map" />
                                <div id="map" style="height: 500px;"></div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" class="btn btn-primary" value="Cập nhật siêu thị" />
                                @Html.RouteLink("Trở lại danh sách siêu thị", "HethongListST", routeValues: null, htmlAttributes: new { @class = "btn btn-default" })
                                @Html.RouteLink("Thay đổi mật khẩu", "HethongChangePassST", routeValues: new { id = Model.SieuThiId }, htmlAttributes: new { @class = "btn btn-default" })
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>Không tìm thấy siêu thị thỏa mãn.</p>
                }
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>


        var myLatlng = {};
        $("#address_search").geocomplete({
            map: "#map",
            zoom: 15,
            scrollwheel: false,
        }).bind("geocode:result", function (event, result) {
            var xxx = result.geometry.location.lat() + ',' + result.geometry.location.lng();
            $('#longlat').val(xxx);
            myLatlng = { lat: result.geometry.location.lat(), lng: result.geometry.location.lng() };
            initmap();
        });

        if ($('#longlat').val() !== "") {
            var b = $('#longlat').val().split(",").map(Number);
            console.log(b);
            myLatlng = { lat: b[0], lng: b[1] }
            initmap();
        }

        function initmap() {

            var marker;
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 15,
                scrollwheel: false,
                center: myLatlng
            });

            marker = new google.maps.Marker({
                map: map,
                draggable: true,
                position: myLatlng
            });

            $('#longlat').val(marker.getPosition().lat() + ',' + marker.getPosition().lng());

            google.maps.event.addListener(marker, 'dragend', function () {
                var _lat = this.getPosition().lat();
                var _long = this.getPosition().lng();
                $('#longlat').val(_lat + ',' + _long);
                console.log(_lat + ',' + _long);
            });

            google.maps.event.addListener(map, 'click', function (event) {
                var _lat = event.latLng.lat();
                var _long = event.latLng.lng();
                $('#longlat').val(_lat + ',' + _long);
                map.setCenter(marker.setPosition(event.latLng));
                console.log(_lat + ',' + _long);
                //map.setZoom(8);
                //map.setCenter(marker.getPosition());
            });
        }

    </script>
}


