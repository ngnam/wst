@model WebSieuThi.Models.HeThongModel
@{
    ViewBag.Title = "Thông tin tài khoản hệ thống";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@section styles {
    @Styles.Render("~/Content/dropzonescss")
}

<div class="row">
    <div class="col-lg-12">
        <div class="page-header">
            <h3><i class="fa fa-user fa-2x fa-color-red"></i> @ViewBag.Title</h3>
        </div>

        @if (TempData["Updated"] != null)
        {
            <div class="alert alert-success alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                @Html.Raw(TempData["Updated"])
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                @Html.Raw(TempData["Error"])
            </div>
        }
    </div>

    <!-- /.col-lg-12 -->
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default box box-primary">
            <div class="panel-body">
                @if (Model != null)
                {
                    using (Html.BeginForm("UpdateProfileHeThong", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "UpdateProfileHeThong" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(m => m.HethongId)

                        <div class="form-group">
                            @Html.LabelFor(m => m.TenHeThong, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.TenHeThong, new { @class = "form-control", placeholder = "Nhập tên hệ thống siêu thị" })
                                @Html.ValidationMessageFor(m => m.TenHeThong, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.SDT, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.SDT, new { @class = "form-control", placeholder = "Nhập số điện thoại liên lạc hệ thống siêu thị" })
                                @Html.ValidationMessageFor(m => m.SDT, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.LoaiHinhKD, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @if (ViewBag.lstLoaiHinhKinhDoanh != null)
                                {
                                    @Html.DropDownListFor(m => m.LoaiHinhKD, new SelectList(ViewBag.lstLoaiHinhKinhDoanh, "Value", "Text"), "-Chọn loại hình kinh doanh hệ thống siêu thị-", new { @class = "form-control" })
                                }
                                @Html.ValidationMessageFor(m => m.LoaiHinhKD, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email Hệ thống" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Country, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Country, new { @class = "form-control", placeholder = "Địa chỉ quốc gia" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.AnhIcon, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.HiddenFor(m => m.AnhIcon)
                                <div id="anhhethong" class="upanh">
                                    <i class="fa fa-edit fa-3x"></i>
                                </div>
                                <div id="dZUpload1" class="dropzone" style="display: none;">
                                    <div class="dz-default dz-message" data-dz-message>
                                        <span>Chọn ảnh hiện thị hệ thống siêu thị</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Picture_GP_KD, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.HiddenFor(m => m.Picture_GP_KD)
                                <div id="anhgiayphep" class="upanh">
                                    <i class="fa fa-plus fa-3x"></i>
                                </div>
                                @Html.ValidationMessageFor(m => m.Picture_GP_KD, "", new { @class = "text-danger" })
                                <div id="dZUpload2" class="dropzone" style="display: none;">
                                    <div class="dz-default dz-message" data-dz-message>
                                        <span>Chọn ảnh giải pháp kinh doanh hệ thống siêu thị</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" class="btn btn-primary" value="Cập nhật hệ thống" />
                                @Html.RouteLink("Thay đổi mật khẩu", "ChangePassUserHeThong", routeValues: null, htmlAttributes: new { @class = "btn btn-default" })
                            </div>
                        </div>
                    }
                }


            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dropzonescripts")

    <script>
        $.validator.setDefaults({
            ignore: ""
        });

        $('#AnhIcon').val() !== "" ? $('#anhhethong').css('background-image', 'url("' + $('#AnhIcon').val() + '")') : false;
        $('#Picture_GP_KD').val() !== "" ? $('#anhgiayphep').css('background-image', 'url("' + $('#Picture_GP_KD').val() + '")') : false;

        $(document).ready(function () {
            Dropzone.autoDiscover = false;
            var myDropzone = new Dropzone("div#dZUpload1", {
                url: "/Account/SaveAnhLocal",
                addRemoveLinks: true,
                maxFiles: 1,
                maxFilesize: 10,
                uploadMultiple: true,
                acceptedFiles: "image/*",
                clickable: '#anhhethong',
                dictFallbackMessage: "Trình duyệt của bạn không hỗ trợ kéo thả tệp để tải lên.",
                dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
                dictFileTooBig: "Tệp có dung lượng quá lớn ({{filesize}}MiB). Dung lượng cho phép: {{maxFilesize}}MiB.",
                dictInvalidFileType: "Tệp bạn chọn không được phép tải lên.",
                dictResponseError: "Server responded with {{statusCode}} code.",
                dictCancelUpload: "Hủy tải lên",
                dictCancelUploadConfirmation: "Bạn chắc chắn muốn hủy tải lên?",
                dictRemoveFile: "Loại bỏ tệp tin",
                dictMaxFilesExceeded: "Bạn không thể tải lên nhiều tệp.",
                success: function (file, response) {
                    var imgPath = response.Message;
                    if (imgPath !== "") {
                        $('#AnhIcon').val(imgPath);
                        $('#anhhethong').css('background-image', 'url("' + imgPath + '")');
                        //file.previewElement.classList.add("dz-success");
                    }
                    this.removeFile(file);
                },

                error: function (file, response) {
                    //file.previewElement.classList.add("dz-error");
                    //$(file.previewElement).find('.dz-error-message').text(response);
                    alert(response);
                    this.removeFile(file);
                },
                HiddenFilesPath: 'body'

            });



            $("#dZUpload2").dropzone({
                url: "/Account/SaveAnhLocal",
                addRemoveLinks: true,
                maxFiles: 1,
                maxFilesize: 10,
                uploadMultiple: true,
                acceptedFiles: "image/*",
                clickable: '#anhgiayphep',
                dictFallbackMessage: "Trình duyệt của bạn không hỗ trợ kéo thả tệp để tải lên.",
                dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
                dictFileTooBig: "Tệp có dung lượng quá lớn ({{filesize}}MiB). Dung lượng cho phép: {{maxFilesize}}MiB.",
                dictInvalidFileType: "Tệp bạn chọn không được phép tải lên.",
                dictResponseError: "Server responded with {{statusCode}} code.",
                dictCancelUpload: "Hủy tải lên",
                dictCancelUploadConfirmation: "Bạn chắc chắn muốn hủy tải lên?",
                dictRemoveFile: "Loại bỏ tệp tin",
                dictMaxFilesExceeded: "Bạn không thể tải lên nhiều tệp.",
                success: function (file, response) {
                    var imgPath = response.Message;
                    if (imgPath !== "") {
                        $('#Picture_GP_KD').val(imgPath);
                        $('#anhgiayphep').css('background-image', 'url("' + imgPath + '")')
                        //file.previewElement.classList.add("dz-success");
                    }
                },

                error: function (file, response) {
                    //file.previewElement.classList.add("dz-error");
                    //$(file.previewElement).find('.dz-error-message').text(response);
                    alert(response);
                },
                HiddenFilesPath: 'body'
            });
        });


    </script>
}



