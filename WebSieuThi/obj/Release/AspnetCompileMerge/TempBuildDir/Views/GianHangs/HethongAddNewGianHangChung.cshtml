@model WebSieuThi.Models.GianHangChungModel
@{
    ViewBag.Title = "Thêm mới gian hàng";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@section styles {
    @Styles.Render("~/Content/dropzonescss")
}

<div class="row">
    <div class="col-lg-12">
        <div class="page-header">
            <h3><i class="fa fa-shopping-basket fa-2x fa-color-red"></i> @ViewBag.Title</h3>
        </div>

        @if (TempData["Updated"] != null)
        {
            <div class="alert alert-success alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                @Html.Raw(TempData["Updated"])
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                @Html.Raw(TempData["Error"])
            </div>
        }
    </div>

    <!-- /.col-lg-12 -->
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default box box-primary">
            <div class="panel-body">

                @using (Html.BeginForm("HethongAddNewGianHangChung", "GianHangs", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "HethongAddNewGianHangChung" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(m => m.MaGianHangChung, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.MaGianHangChung, new { @class = "form-control", placeholder = "Nhập mã gian hàng" })
                            @Html.ValidationMessageFor(m => m.MaGianHangChung, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.TenGianHangChung, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.TenGianHangChung, new { @class = "form-control", placeholder = "Tên gian hàng" })
                            @Html.ValidationMessageFor(m => m.TenGianHangChung, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.AnhGianHang, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            
                            <div id="divanhgianhang" class="upanh">
                                <a class="closed"><i class="fa fa-close fa-2x"></i></a>
                                @Html.HiddenFor(m => m.AnhGianHang)
                                <i class="fa fa-plus fa-3x"></i>
                                
                            </div>
                            @Html.ValidationMessageFor(m => m.AnhGianHang, "", new { @class = "text-danger" })
                            <div id="dzAnhGianHang" class="dropzone" style="display: none;">
                                <div class="dz-default dz-message" data-dz-message>
                                    <span>Chọn ảnh gian hàng chung hệ thống siêu thị</span>
                                </div>
                            </div>
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" class="btn btn-primary" value="Thêm gian hàng" />
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dropzonescripts")

    <script>
        $.validator.setDefaults({
            ignore: ""
        });
        
        $('.closed').click(function (e) {
            e.preventDefault();
            if ($(this).siblings('input').val() !== "") {
                if (confirm("Bạn chắc chắn muốn xóa ảnh?")) {
                    $(this).parent('.upanh').css('background-image', 'url("/Content/img/no-image.png")');
                    $(this).siblings('input').val('');
                }
            }
        })

        $(document).ready(function () {
            

            Dropzone.autoDiscover = false;
            var myUpAnh = new Dropzone("div#dzAnhGianHang", {
                url: "/Account/SaveAnhImgur",
                addRemoveLinks: true,
                maxFiles: 1,
                maxFilesize: 1,
                uploadMultiple: true,
                acceptedFiles: "image/*",
                clickable: '#divanhgianhang>i',
                dictFallbackMessage: "Trình duyệt của bạn không hỗ trợ kéo thả tệp để tải lên.",
                dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
                dictFileTooBig: "Tệp có dung lượng quá lớn ({{filesize}}MiB). Dung lượng cho phép: {{maxFilesize}}MiB.",
                dictInvalidFileType: "Tệp bạn chọn không được phép tải lên.",
                dictResponseError: "Server responded with {{statusCode}} code.",
                dictCancelUpload: "Hủy tải lên",
                dictCancelUploadConfirmation: "Bạn chắc chắn muốn hủy tải lên?",
                dictRemoveFile: "Loại bỏ tệp tin",
                dictMaxFilesExceeded: "Bạn không thể tải lên nhiều tệp.",
                success: function (file, response) {
                    var imgPath = response.Message;
                    if (imgPath !== "") {
                        $('#AnhGianHang').val(imgPath);
                        $('#divanhgianhang').css('background-image', 'url("' + imgPath + '")');
                        
                    }
                    this.removeFile(file);
                },
                error: function (file, response) {
                    alert(response);
                    this.removeFile(file);
                },
                init: function() {
                    this.on("thumbnail", function(file) {
                        if (file.width - file.height < 10 || file.width - file.height > -10) {                            
                            file.acceptDimensions();
                            $('#divanhgianhang').append('<div class="loaded">' +
                                    '<i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>' +
                                '</div>');
                        }
                        else {
                            file.rejectDimensions();
                        }
                    })
                },
                complete: function () {
                    $('#divanhgianhang').children('.loaded').remove();
                },
                accept: function(file, done) {
                    file.rejectDimensions = function() { 
                        done("Vui lòng chọn ảnh có chiều rộng và chiều cao bằng nhau."); 
                    };
                    file.acceptDimensions = done;
                },
                HiddenFilesPath: 'body'

            });

            
        });

    </script>
}